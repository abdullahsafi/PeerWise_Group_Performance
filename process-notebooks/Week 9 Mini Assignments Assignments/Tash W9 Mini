{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "DATA1002 Project 1 Final Code.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NTmZYTry28jk"
      },
      "source": [
        "#DATA1002 Stage 1 Group 3"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "B3XjIT-C3Abp"
      },
      "source": [
        "###Importing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1QUPAdaR22z6",
        "outputId": "661a067a-9de1-47ee-a7b3-7cb6c4a1eaf2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "#Using GoogleColab to write in a IPython notebook\n",
        "#Import pandas library\n",
        "import pandas as pd\n",
        " \n",
        "#Read population density csv and rename the column to Country so that all 3 datasets have a column called 'Country' containing country names. This will be useful for merging/joining the 3 datasets by the Country column.\n",
        "popd = pd.read_csv ('/Population density by countries.csv')\n",
        "popd = popd.rename(columns={'Country (or dependent territory)': 'Country'})\n",
        " \n",
        "#Provides basic statistical analysis of the csv file\n",
        "popd.describe()\n",
        " \n",
        "#Provides boolean result for identifying null values\n",
        "popd.isnull().any()\n",
        "\n",
        "#Prints column names of population density dataset\n",
        "popd.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Rank', 'Country', 'Area km2', 'Area mi2', 'Population',\n",
              "       'Density pop./km2', 'Density pop./mi2', 'Date', 'Population source'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DcLOLW6s3M5L",
        "outputId": "ec297825-3238-45a0-fac0-a229135424a4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        }
      },
      "source": [
        "#Read covid csv\n",
        "covid = pd.read_csv ('/country_wise_latest.csv')\n",
        " \n",
        "#Changes the name of the column “Country/Region” to “Country” in covid so that all 3 datasets have a column called 'Country' containing country names. This will be useful for merging/joining the 3 datasets by the Country column.\n",
        "covid = covid.rename(columns={'Country/Region': 'Country'})\n",
        " \n",
        "#Provides basic statistical analysis of the csv file \n",
        "covid.describe()\n",
        " \n",
        "#Provides boolean result for identifying null values\n",
        "covid.isnull().any()\n",
        "\n",
        "#Prints column names of covid dataset\n",
        "covid.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Country', 'Confirmed', 'Deaths', 'Recovered', 'Active', 'New cases',\n",
              "       'New deaths', 'New recovered', 'Deaths / 100 Cases',\n",
              "       'Recovered / 100 Cases', 'Deaths / 100 Recovered',\n",
              "       'Confirmed last week', '1 week change', '1 week % increase',\n",
              "       'WHO Region'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yTvHJEQH3Pla",
        "outputId": "6984d947-cb35-4146-edba-eee0f3b44f76",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 374
        }
      },
      "source": [
        "#Reads in the csv file\n",
        "happy = pd.read_csv ('/2020.csv')\n",
        " \n",
        "#Changes the name of the column “Country name” to “Country” in happy so that all 3 datasets have a column called 'Country' containing country names. This will be useful for merging/joining the 3 datasets by the Country column.\n",
        "happy = happy.rename(columns={'Country name': 'Country'})\n",
        " \n",
        "#Provides basic statistical analysis of the csv file\n",
        "happy.describe()\n",
        " \n",
        "#Provides boolean result for identifying null values\n",
        "happy.isnull().any()\n",
        "\n",
        "#Prints column names of happy dataset\n",
        "happy.columns\n",
        "\n",
        "happy.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Country                                        object\n",
              "Regional indicator                             object\n",
              "Ladder score                                  float64\n",
              "Standard error of ladder score                float64\n",
              "upperwhisker                                  float64\n",
              "lowerwhisker                                  float64\n",
              "Logged GDP per capita                         float64\n",
              "Social support                                float64\n",
              "Healthy life expectancy                       float64\n",
              "Freedom to make life choices                  float64\n",
              "Generosity                                    float64\n",
              "Perceptions of corruption                     float64\n",
              "Ladder score in Dystopia                      float64\n",
              "Explained by: Log GDP per capita              float64\n",
              "Explained by: Social support                  float64\n",
              "Explained by: Healthy life expectancy         float64\n",
              "Explained by: Freedom to make life choices    float64\n",
              "Explained by: Generosity                      float64\n",
              "Explained by: Perceptions of corruption       float64\n",
              "Dystopia + residual                           float64\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aZMCYoEz3fR-",
        "outputId": "4087238d-08ff-4321-a903-0756427287e4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "source": [
        "#Merging the csv files popd and covid using the column name ‘Country’ using a right join. A right join was decided as the popd dataset contained provinces in the Country dataset, which we did not want to include. Hence, those countries that are not in the covid dataset, will be dropped as we are particularly looking at the Covid data (main focus and research question).\n",
        "popd_covid = pd.merge(popd, covid, on='Country',how='right')\n",
        " \n",
        "#Sorts Country column alphabetically \n",
        "popd_covid = popd_covid.sort_values('Country')\n",
        " \n",
        "# Decided to perform a right join on the three datasets according to the covid data. When we joined the first 2 datasets, we decided to join according to the countries from the Covid dataset. Hence, we will do the same when joining the first joined dataset and the happy dataset. \n",
        "all = pd.merge(happy, popd_covid, on='Country',how='right')\n",
        "\n",
        "# Print the columns of the joined dataset. There can be seen all columns from popd, covid and happy.\n",
        "all.columns\n",
        "\n",
        "# Print the data types of all columns.\n",
        "all.dtypes\n",
        "#We can see that a large number of columns are float and integer data types. \n",
        "\n",
        "all.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Country', 'Regional indicator', 'Ladder score',\n",
              "       'Standard error of ladder score', 'upperwhisker', 'lowerwhisker',\n",
              "       'Logged GDP per capita', 'Social support', 'Healthy life expectancy',\n",
              "       'Freedom to make life choices', 'Generosity',\n",
              "       'Perceptions of corruption', 'Ladder score in Dystopia',\n",
              "       'Explained by: Log GDP per capita', 'Explained by: Social support',\n",
              "       'Explained by: Healthy life expectancy',\n",
              "       'Explained by: Freedom to make life choices',\n",
              "       'Explained by: Generosity', 'Explained by: Perceptions of corruption',\n",
              "       'Dystopia + residual', 'Rank', 'Area km2', 'Area mi2', 'Population',\n",
              "       'Density pop./km2', 'Density pop./mi2', 'Date', 'Population source',\n",
              "       'Confirmed', 'Deaths', 'Recovered', 'Active', 'New cases', 'New deaths',\n",
              "       'New recovered', 'Deaths / 100 Cases', 'Recovered / 100 Cases',\n",
              "       'Deaths / 100 Recovered', 'Confirmed last week', '1 week change',\n",
              "       '1 week % increase', 'WHO Region'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UQ6zOuoy3hM7"
      },
      "source": [
        "###Cleaning"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hVc1Pqrw3k0b",
        "outputId": "c37b083a-f335-4b05-ffd4-926b84feeedd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "#Drops any rows with at least one NaN value because for analysis, we want every available country to have values in all columns. \n",
        "all = all.dropna()\n",
        " \n",
        "#Converts pandas series data type to datetime data type so that we can then filter out rows that are 'out-of-date'\n",
        "all[\"Date\"] = pd.to_datetime(all[\"Date\"])\n",
        " \n",
        "#Filters out all rows with a date before 2020 so that we can analyse only the most recent and relevant country data\n",
        "all = all[(all['Date'] > '2020-01-01')]\n",
        " \n",
        "#Reset the index so that for future analysis, readers can identify and refer to the same chronological index.\n",
        "all = all.reset_index(drop=True)\n",
        " \n",
        "#Remove thousands commas from the following columns in order to not confuse readers and convert the column into an integer\n",
        "all['Area mi2'] = all['Area mi2'].str.replace(',', '').astype(int)\n",
        "all['Area km2'] = all['Area km2'].str.replace(',', '').astype(int)\n",
        "all['Population'] = all['Population'].str.replace(',', '').astype(int)\n",
        " \n",
        "#Print dataset\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None):  # more options can be specified also\n",
        "   print(all)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "        Country                  Regional indicator  Ladder score  \\\n",
            "0     Australia               North America and ANZ        7.2228   \n",
            "1    Bangladesh                          South Asia        4.8328   \n",
            "2        Brazil         Latin America and Caribbean        6.3756   \n",
            "3       Burundi                  Sub-Saharan Africa        3.7753   \n",
            "4        Canada               North America and ANZ        7.2321   \n",
            "5         China                           East Asia        5.1239   \n",
            "6      Colombia         Latin America and Caribbean        6.1634   \n",
            "7       Ecuador         Latin America and Caribbean        5.9252   \n",
            "8         Egypt        Middle East and North Africa        4.1514   \n",
            "9         India                          South Asia        3.5733   \n",
            "10         Iran        Middle East and North Africa        4.6724   \n",
            "11       Israel        Middle East and North Africa        7.1286   \n",
            "12        Japan                           East Asia        5.8708   \n",
            "13       Jordan        Middle East and North Africa        4.6334   \n",
            "14   Kazakhstan  Commonwealth of Independent States        6.0579   \n",
            "15     Malaysia                      Southeast Asia        5.3843   \n",
            "16      Morocco        Middle East and North Africa        5.0948   \n",
            "17  Netherlands                      Western Europe        7.4489   \n",
            "18  New Zealand               North America and ANZ        7.2996   \n",
            "19     Pakistan                          South Asia        5.6933   \n",
            "20  Philippines                      Southeast Asia        6.0060   \n",
            "21  South Korea                           East Asia        5.8724   \n",
            "22       Sweden                      Western Europe        7.3535   \n",
            "23     Thailand                      Southeast Asia        5.9988   \n",
            "\n",
            "    Standard error of ladder score  upperwhisker  lowerwhisker  \\\n",
            "0                         0.041841      7.304808      7.140791   \n",
            "1                         0.040124      4.911443      4.754157   \n",
            "2                         0.040791      6.455550      6.295650   \n",
            "3                         0.107122      3.985260      3.565340   \n",
            "4                         0.040405      7.311295      7.152905   \n",
            "5                         0.025902      5.174667      5.073133   \n",
            "6                         0.056481      6.274103      6.052698   \n",
            "7                         0.052881      6.028846      5.821554   \n",
            "8                         0.035979      4.221920      4.080881   \n",
            "9                         0.027702      3.627596      3.519003   \n",
            "10                        0.055878      4.781921      4.562879   \n",
            "11                        0.042515      7.211930      7.045270   \n",
            "12                        0.041392      5.951928      5.789672   \n",
            "13                        0.058751      4.748552      4.518248   \n",
            "14                        0.043230      6.142630      5.973170   \n",
            "15                        0.048803      5.479953      5.288647   \n",
            "16                        0.055650      5.203875      4.985725   \n",
            "17                        0.027792      7.503372      7.394428   \n",
            "18                        0.039465      7.376953      7.222248   \n",
            "19                        0.048216      5.787804      5.598796   \n",
            "20                        0.049858      6.103723      5.908278   \n",
            "21                        0.044085      5.958807      5.785993   \n",
            "22                        0.036234      7.424519      7.282481   \n",
            "23                        0.042596      6.082289      5.915311   \n",
            "\n",
            "    Logged GDP per capita  Social support  Healthy life expectancy  \\\n",
            "0               10.720596        0.944855                73.604538   \n",
            "1                8.287064        0.687293                64.503067   \n",
            "2                9.566435        0.896724                66.480164   \n",
            "3                6.492642        0.490326                53.400002   \n",
            "4               10.692369        0.927177                73.601601   \n",
            "5                9.688568        0.798761                69.289192   \n",
            "6                9.500369        0.884440                67.699585   \n",
            "7                9.246058        0.836419                68.500038   \n",
            "8                9.316542        0.735448                61.780151   \n",
            "9                8.849824        0.592201                60.215187   \n",
            "10               9.813720        0.694690                66.006149   \n",
            "11              10.417525        0.913571                73.200256   \n",
            "12              10.579689        0.883546                75.000969   \n",
            "13               9.025999        0.802164                66.799751   \n",
            "14              10.114658        0.934745                64.609962   \n",
            "15              10.262519        0.816509                67.102158   \n",
            "16               8.940313        0.592628                65.896240   \n",
            "17              10.812712        0.939139                72.300919   \n",
            "18              10.500943        0.949119                73.202629   \n",
            "19               8.482727        0.689062                58.253136   \n",
            "20               8.993546        0.846730                61.926762   \n",
            "21              10.510567        0.799387                73.602730   \n",
            "22              10.758794        0.926311                72.600769   \n",
            "23               9.741792        0.889973                67.250595   \n",
            "\n",
            "    Freedom to make life choices  Generosity  Perceptions of corruption  \\\n",
            "0                       0.915432    0.190460                   0.415169   \n",
            "1                       0.900625   -0.033665                   0.661844   \n",
            "2                       0.799805   -0.101812                   0.770601   \n",
            "3                       0.626350   -0.017552                   0.606935   \n",
            "4                       0.933913    0.124771                   0.390843   \n",
            "5                       0.898518   -0.181426                   0.753971   \n",
            "6                       0.836180   -0.161236                   0.864572   \n",
            "7                       0.859829   -0.127015                   0.801215   \n",
            "8                       0.708354   -0.196878                   0.787727   \n",
            "9                       0.881445    0.057552                   0.772043   \n",
            "10                      0.647873    0.117891                   0.714636   \n",
            "11                      0.747581    0.102594                   0.780855   \n",
            "12                      0.809961   -0.246910                   0.654558   \n",
            "13                      0.751048   -0.162565                   0.700344   \n",
            "14                      0.811602   -0.068489                   0.764491   \n",
            "15                      0.894627    0.114727                   0.839302   \n",
            "16                      0.772072   -0.240377                   0.815725   \n",
            "17                      0.908548    0.207612                   0.364717   \n",
            "18                      0.936217    0.191598                   0.221139   \n",
            "19                      0.734834    0.044900                   0.745705   \n",
            "20                      0.915463   -0.105463                   0.733634   \n",
            "21                      0.612965   -0.043404                   0.789067   \n",
            "22                      0.939144    0.111615                   0.250880   \n",
            "23                      0.905063    0.268685                   0.886272   \n",
            "\n",
            "    Ladder score in Dystopia  Explained by: Log GDP per capita  \\\n",
            "0                   1.972317                          1.310396   \n",
            "1                   1.972317                          0.556156   \n",
            "2                   1.972317                          0.952680   \n",
            "3                   1.972317                          0.000000   \n",
            "4                   1.972317                          1.301648   \n",
            "5                   1.972317                          0.990533   \n",
            "6                   1.972317                          0.932204   \n",
            "7                   1.972317                          0.853384   \n",
            "8                   1.972317                          0.875229   \n",
            "9                   1.972317                          0.730576   \n",
            "10                  1.972317                          1.029323   \n",
            "11                  1.972317                          1.216464   \n",
            "12                  1.972317                          1.266724   \n",
            "13                  1.972317                          0.785179   \n",
            "14                  1.972317                          1.122594   \n",
            "15                  1.972317                          1.168422   \n",
            "16                  1.972317                          0.758622   \n",
            "17                  1.972317                          1.338946   \n",
            "18                  1.972317                          1.242318   \n",
            "19                  1.972317                          0.616799   \n",
            "20                  1.972317                          0.775121   \n",
            "21                  1.972317                          1.245301   \n",
            "22                  1.972317                          1.322235   \n",
            "23                  1.972317                          1.007029   \n",
            "\n",
            "    Explained by: Social support  Explained by: Healthy life expectancy  \\\n",
            "0                       1.477146                               1.022608   \n",
            "1                       0.868801                               0.694941   \n",
            "2                       1.363464                               0.766119   \n",
            "3                       0.403575                               0.295213   \n",
            "4                       1.435392                               1.022502   \n",
            "5                       1.132081                               0.867249   \n",
            "6                       1.334451                               0.810020   \n",
            "7                       1.221028                               0.838838   \n",
            "8                       0.982540                               0.596911   \n",
            "9                       0.644199                               0.540570   \n",
            "10                      0.886271                               0.749054   \n",
            "11                      1.403257                               1.008053   \n",
            "12                      1.332339                               1.072881   \n",
            "13                      1.140119                               0.777625   \n",
            "14                      1.453268                               0.698789   \n",
            "15                      1.174002                               0.788512   \n",
            "16                      0.645208                               0.745097   \n",
            "17                      1.463646                               0.975675   \n",
            "18                      1.487218                               1.008138   \n",
            "19                      0.872980                               0.469933   \n",
            "20                      1.245382                               0.602189   \n",
            "21                      1.133561                               1.022543   \n",
            "22                      1.433348                               0.986470   \n",
            "23                      1.347520                               0.793856   \n",
            "\n",
            "    Explained by: Freedom to make life choices  Explained by: Generosity  \\\n",
            "0                                     0.621877                  0.324974   \n",
            "1                                     0.604131                  0.176745   \n",
            "2                                     0.483293                  0.131675   \n",
            "3                                     0.275399                  0.187402   \n",
            "4                                     0.644028                  0.281529   \n",
            "5                                     0.601605                  0.079021   \n",
            "6                                     0.526890                  0.092374   \n",
            "7                                     0.555235                  0.115006   \n",
            "8                                     0.373685                  0.068801   \n",
            "9                                     0.581142                  0.237072   \n",
            "10                                    0.301195                  0.276979   \n",
            "11                                    0.420699                  0.266862   \n",
            "12                                    0.495466                  0.035712   \n",
            "13                                    0.424855                  0.091495   \n",
            "14                                    0.497432                  0.153714   \n",
            "15                                    0.596942                  0.274886   \n",
            "16                                    0.450054                  0.040033   \n",
            "17                                    0.613626                  0.336318   \n",
            "18                                    0.646790                  0.325726   \n",
            "19                                    0.405422                  0.228705   \n",
            "20                                    0.621915                  0.129260   \n",
            "21                                    0.259356                  0.170304   \n",
            "22                                    0.650298                  0.272828   \n",
            "23                                    0.609450                  0.376709   \n",
            "\n",
            "    Explained by: Perceptions of corruption  Dystopia + residual Rank  \\\n",
            "0                                  0.335996             2.129804  192   \n",
            "1                                  0.176736             1.755262    7   \n",
            "2                                  0.106519             2.571860  154   \n",
            "3                                  0.212187             2.401507   20   \n",
            "4                                  0.351702             2.195269  187   \n",
            "5                                  0.117256             1.336182   59   \n",
            "6                                  0.045848             2.421657  139   \n",
            "7                                  0.086753             2.254934  120   \n",
            "8                                  0.095462             1.158818   83   \n",
            "9                                  0.105588             0.734131   19   \n",
            "10                                 0.142652             1.286969  126   \n",
            "11                                 0.099898             2.713358   18   \n",
            "12                                 0.181440             1.486200   24   \n",
            "13                                 0.151879             1.262258   70   \n",
            "14                                 0.110464             2.021603  184   \n",
            "15                                 0.062163             1.319421   85   \n",
            "16                                 0.077386             2.378402  102   \n",
            "17                                 0.368570             2.352117   16   \n",
            "18                                 0.461268             2.128108  167   \n",
            "19                                 0.122592             2.976877   33   \n",
            "20                                 0.130386             2.501742   23   \n",
            "21                                 0.094596             1.946757   13   \n",
            "22                                 0.442066             2.246299  159   \n",
            "23                                 0.031838             1.832384   66   \n",
            "\n",
            "    Area km2  Area mi2  Population Density pop./km2 Density pop./mi2  \\\n",
            "0    7692024   2969907    25649909                3                9   \n",
            "1     143998     55598   168287530            1,169            3,027   \n",
            "2    8515767   3287956   211270518               25               64   \n",
            "3      27816     10740    11215578              403            1,044   \n",
            "4    9984670   3855103    37961548                4               10   \n",
            "5    9640821   3722342  1401812360              145              377   \n",
            "6    1141748    440831    46202800               40              105   \n",
            "7     276841    106889    17446584               63              163   \n",
            "8    1002450    387048   100138465              100              259   \n",
            "9    3287240   1269211  1359933123              414            1,071   \n",
            "10   1648195    636372    83290141               51              131   \n",
            "11     22072      8522     9173250              416            1,076   \n",
            "12    377975    145937   126010000              333              862   \n",
            "13     89342     34495    10638536              119              308   \n",
            "14   2724900   1052090    18592700                7               18   \n",
            "15    330803    127724    32722760               99              256   \n",
            "16    446550    172414    35842238               80              208   \n",
            "17     41526     16033    17445781              420            1,088   \n",
            "18    270467    104428     4971205               18               48   \n",
            "19    803940    310403   218983520              272              705   \n",
            "20    300000    115831   108420484              361              936   \n",
            "21    100210     38691    51780579              517            1,339   \n",
            "22    450295    173860    10365705               23               60   \n",
            "23    513120    198117    66482792              130              336   \n",
            "\n",
            "         Date           Population source  Confirmed  Deaths  Recovered  \\\n",
            "0  2020-03-18           Official estimate      15303     167       9311   \n",
            "1  2020-03-18   Official population clock     226225    2965     125683   \n",
            "2  2020-03-18   Official population clock    2442375   87618    1846641   \n",
            "3  2020-07-01  Official annual projection        378       1        301   \n",
            "4  2020-03-18           Official estimate     116458    8944          0   \n",
            "5  2020-03-18           Official estimate      86783    4656      78869   \n",
            "6  2020-03-18   Official population clock     257101    8777     131161   \n",
            "7  2020-03-18         Official Projection      81161    5532      34896   \n",
            "8  2020-03-18   Official population clock      92482    4652      34838   \n",
            "9  2020-03-18            Population clock    1480073   33408     951166   \n",
            "10 2020-03-18   Official population clock     293606   15912     255144   \n",
            "11 2020-03-18   Official population clock      63985     474      27133   \n",
            "12 2020-02-01   Monthly official estimate      31142     998      21970   \n",
            "13 2020-03-18   Official population clock       1176      11       1041   \n",
            "14 2020-01-04   Official monthly estimate      84648     585      54404   \n",
            "15 2020-03-18   Official population clock       8904     124       8601   \n",
            "16 2020-03-18   Official population clock      20887     316      16553   \n",
            "17 2020-03-18   Official population clock      53413    6160        189   \n",
            "18 2020-03-18   Official population clock       1557      22       1514   \n",
            "19 2020-03-18   Official population clock     274289    5842     241026   \n",
            "20 2020-03-18   Official population clock      82040    1945      26446   \n",
            "21 2020-07-01  Official annual projection      14203     300      13007   \n",
            "22 2020-03-18   Official population clock      79395    5700          0   \n",
            "23 2020-03-18   Official population clock       3297      58       3111   \n",
            "\n",
            "    Active  New cases  New deaths  New recovered  Deaths / 100 Cases  \\\n",
            "0     5825        368           6            137                1.09   \n",
            "1    97577       2772          37           1801                1.31   \n",
            "2   508116      23284         614          33728                3.59   \n",
            "3       76         17           0             22                0.26   \n",
            "4   107514        682          11              0                7.68   \n",
            "5     3258        213           4              7                5.37   \n",
            "6   117163      16306         508          11494                3.41   \n",
            "7    40733        467          17              0                6.82   \n",
            "8    52992        420          46           1007                5.03   \n",
            "9   495499      44457         637          33598                2.26   \n",
            "10   22550       2434         212           1931                5.42   \n",
            "11   36378       2029           4            108                0.74   \n",
            "12    8174        594           0            364                3.20   \n",
            "13     124          8           0              0                0.94   \n",
            "14   29659       1526           0           1833                0.69   \n",
            "15     179          7           0              1                1.39   \n",
            "16    4018        609           3            115                1.51   \n",
            "17   47064        419           1              0               11.53   \n",
            "18      21          1           0              1                1.41   \n",
            "19   27421       1176          20           3592                2.13   \n",
            "20   53649       1592          13            336                2.37   \n",
            "21     896         28           1            102                2.11   \n",
            "22   73695        398           3              0                7.18   \n",
            "23     128          6           0              2                1.76   \n",
            "\n",
            "    Recovered / 100 Cases  Deaths / 100 Recovered  Confirmed last week  \\\n",
            "0                   60.84                    1.79                12428   \n",
            "1                   55.56                    2.36               207453   \n",
            "2                   75.61                    4.74              2118646   \n",
            "3                   79.63                    0.33                  322   \n",
            "4                    0.00                     inf               112925   \n",
            "5                   90.88                    5.90                85622   \n",
            "6                   51.02                    6.69               204005   \n",
            "7                   43.00                   15.85                74620   \n",
            "8                   37.67                   13.35                88402   \n",
            "9                   64.26                    3.51              1155338   \n",
            "10                  86.90                    6.24               276202   \n",
            "11                  42.41                    1.75                52003   \n",
            "12                  70.55                    4.54                25706   \n",
            "13                  88.52                    1.06                 1223   \n",
            "14                  64.27                    1.08                73468   \n",
            "15                  96.60                    1.44                 8800   \n",
            "16                  79.25                    1.91                17562   \n",
            "17                   0.35                 3259.26                52132   \n",
            "18                  97.24                    1.45                 1555   \n",
            "19                  87.87                    2.42               266096   \n",
            "20                  32.24                    7.35                68898   \n",
            "21                  91.58                    2.31                13816   \n",
            "22                   0.00                     inf                78048   \n",
            "23                  94.36                    1.86                 3250   \n",
            "\n",
            "    1 week change  1 week % increase             WHO Region  \n",
            "0            2875              23.13        Western Pacific  \n",
            "1           18772               9.05        South-East Asia  \n",
            "2          323729              15.28               Americas  \n",
            "3              56              17.39                 Africa  \n",
            "4            3533               3.13               Americas  \n",
            "5            1161               1.36        Western Pacific  \n",
            "6           53096              26.03               Americas  \n",
            "7            6541               8.77               Americas  \n",
            "8            4080               4.62  Eastern Mediterranean  \n",
            "9          324735              28.11        South-East Asia  \n",
            "10          17404               6.30  Eastern Mediterranean  \n",
            "11          11982              23.04                 Europe  \n",
            "12           5436              21.15        Western Pacific  \n",
            "13            -47              -3.84  Eastern Mediterranean  \n",
            "14          11180              15.22                 Europe  \n",
            "15            104               1.18        Western Pacific  \n",
            "16           3325              18.93  Eastern Mediterranean  \n",
            "17           1281               2.46                 Europe  \n",
            "18              2               0.13        Western Pacific  \n",
            "19           8193               3.08  Eastern Mediterranean  \n",
            "20          13142              19.07        Western Pacific  \n",
            "21            387               2.80        Western Pacific  \n",
            "22           1347               1.73                 Europe  \n",
            "23             47               1.45        South-East Asia  \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EZA8F_jtQ925"
      },
      "source": [
        "#Save clean dataset to new csv, which we will submit.\n",
        "all.to_csv('Clean dataset.csv') "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DxddRqFB3nsF"
      },
      "source": [
        "###Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "trxI9dkq3pUw",
        "outputId": "0bd80c27-ba7a-4f04-f9c9-7137b64f743b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 402
        }
      },
      "source": [
        "# Import matplotlib and plotly for plotting purposes (Ignore - STAGE 2)\n",
        "from matplotlib import pyplot as pl\n",
        "import plotly.express as px\n",
        " \n",
        "#Provides basic statistical analysis of the final csv file across all columns.\n",
        "all.describe()\n",
        "#We can see from the statistical summary, that the mean for the ladder score is 5.79 across the 24 countries, with a maximum of 7.45 and minimum of 3.57. Whilst, the mean for logged GDP per capita is 9.64, with a maximum of 10.81 and minimum of 9.64. On the other hand, the mean health life expectancy is 67.37, with a maximum of 75 years old and minimum of 53.4 years old.\n",
        "\n",
        "#Sort by ladder score and look at the five lowest scores. \n",
        "all.sort_values(ascending=True, inplace=True,by='Ladder score')\n",
        "all.head()\n",
        "#We can see that in the dataset, India had the lowest ladder score of 3.57, followed by Burundi, Egypt, Jordan and Iran. \n",
        " \n",
        "#Query Australia. \n",
        "all.query(\"Country == 'Australia'\")\n",
        "#We can see in comparison to the mean ladder score of 5.79, Australia obtained a higher ladder score of 7.22."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ladder score</th>\n",
              "      <th>Standard error of ladder score</th>\n",
              "      <th>upperwhisker</th>\n",
              "      <th>lowerwhisker</th>\n",
              "      <th>Logged GDP per capita</th>\n",
              "      <th>Social support</th>\n",
              "      <th>Healthy life expectancy</th>\n",
              "      <th>Freedom to make life choices</th>\n",
              "      <th>Generosity</th>\n",
              "      <th>Perceptions of corruption</th>\n",
              "      <th>Ladder score in Dystopia</th>\n",
              "      <th>Explained by: Log GDP per capita</th>\n",
              "      <th>Explained by: Social support</th>\n",
              "      <th>Explained by: Healthy life expectancy</th>\n",
              "      <th>Explained by: Freedom to make life choices</th>\n",
              "      <th>Explained by: Generosity</th>\n",
              "      <th>Explained by: Perceptions of corruption</th>\n",
              "      <th>Dystopia + residual</th>\n",
              "      <th>Area km2</th>\n",
              "      <th>Area mi2</th>\n",
              "      <th>Population</th>\n",
              "      <th>Confirmed</th>\n",
              "      <th>Deaths</th>\n",
              "      <th>Recovered</th>\n",
              "      <th>Active</th>\n",
              "      <th>New cases</th>\n",
              "      <th>New deaths</th>\n",
              "      <th>New recovered</th>\n",
              "      <th>Deaths / 100 Cases</th>\n",
              "      <th>Recovered / 100 Cases</th>\n",
              "      <th>Deaths / 100 Recovered</th>\n",
              "      <th>Confirmed last week</th>\n",
              "      <th>1 week change</th>\n",
              "      <th>1 week % increase</th>\n",
              "      <th>Perc deaths over confirmed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000</td>\n",
              "      <td>2.400000e+01</td>\n",
              "      <td>24.00000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>24.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>5.787104</td>\n",
              "      <td>0.045987</td>\n",
              "      <td>5.877239</td>\n",
              "      <td>5.696969</td>\n",
              "      <td>9.638165</td>\n",
              "      <td>0.811301</td>\n",
              "      <td>67.367773</td>\n",
              "      <td>0.822810</td>\n",
              "      <td>-0.006433</td>\n",
              "      <td>0.670260</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>0.974912</td>\n",
              "      <td>1.161700</td>\n",
              "      <td>0.798074</td>\n",
              "      <td>0.510866</td>\n",
              "      <td>0.194755</td>\n",
              "      <td>0.171302</td>\n",
              "      <td>1.975497</td>\n",
              "      <td>2.076365e+06</td>\n",
              "      <td>8.016892e+05</td>\n",
              "      <td>1.739433e+08</td>\n",
              "      <td>2.421200e+05</td>\n",
              "      <td>8131.958333</td>\n",
              "      <td>1.617919e+05</td>\n",
              "      <td>72196.208333</td>\n",
              "      <td>4158.875000</td>\n",
              "      <td>89.041667</td>\n",
              "      <td>3757.458333</td>\n",
              "      <td>3.300000</td>\n",
              "      <td>62.108750</td>\n",
              "      <td>inf</td>\n",
              "      <td>2.082717e+05</td>\n",
              "      <td>33848.37500</td>\n",
              "      <td>10.398750</td>\n",
              "      <td>3.300433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.148482</td>\n",
              "      <td>0.015811</td>\n",
              "      <td>1.137391</td>\n",
              "      <td>1.160295</td>\n",
              "      <td>1.017533</td>\n",
              "      <td>0.128604</td>\n",
              "      <td>5.559766</td>\n",
              "      <td>0.102199</td>\n",
              "      <td>0.154175</td>\n",
              "      <td>0.193229</td>\n",
              "      <td>6.804609e-16</td>\n",
              "      <td>0.315370</td>\n",
              "      <td>0.303755</td>\n",
              "      <td>0.200160</td>\n",
              "      <td>0.122491</td>\n",
              "      <td>0.101966</td>\n",
              "      <td>0.124755</td>\n",
              "      <td>0.569231</td>\n",
              "      <td>3.270123e+06</td>\n",
              "      <td>1.262602e+06</td>\n",
              "      <td>3.769993e+08</td>\n",
              "      <td>5.553266e+05</td>\n",
              "      <td>18426.118465</td>\n",
              "      <td>4.095013e+05</td>\n",
              "      <td>137049.202750</td>\n",
              "      <td>10205.318218</td>\n",
              "      <td>197.818863</td>\n",
              "      <td>9519.363666</td>\n",
              "      <td>2.803639</td>\n",
              "      <td>30.884753</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.695371e+05</td>\n",
              "      <td>90136.32487</td>\n",
              "      <td>9.671453</td>\n",
              "      <td>2.803142</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>3.573300</td>\n",
              "      <td>0.025902</td>\n",
              "      <td>3.627596</td>\n",
              "      <td>3.519003</td>\n",
              "      <td>6.492642</td>\n",
              "      <td>0.490326</td>\n",
              "      <td>53.400002</td>\n",
              "      <td>0.612965</td>\n",
              "      <td>-0.246910</td>\n",
              "      <td>0.221139</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.403575</td>\n",
              "      <td>0.295213</td>\n",
              "      <td>0.259356</td>\n",
              "      <td>0.035712</td>\n",
              "      <td>0.031838</td>\n",
              "      <td>0.734131</td>\n",
              "      <td>2.207200e+04</td>\n",
              "      <td>8.522000e+03</td>\n",
              "      <td>4.971205e+06</td>\n",
              "      <td>3.780000e+02</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.260000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.330</td>\n",
              "      <td>3.220000e+02</td>\n",
              "      <td>-47.00000</td>\n",
              "      <td>-3.840000</td>\n",
              "      <td>0.264550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>5.029300</td>\n",
              "      <td>0.039960</td>\n",
              "      <td>5.108861</td>\n",
              "      <td>4.927833</td>\n",
              "      <td>9.017886</td>\n",
              "      <td>0.725258</td>\n",
              "      <td>64.583239</td>\n",
              "      <td>0.750181</td>\n",
              "      <td>-0.135570</td>\n",
              "      <td>0.642652</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>0.782665</td>\n",
              "      <td>0.958472</td>\n",
              "      <td>0.697827</td>\n",
              "      <td>0.423816</td>\n",
              "      <td>0.109348</td>\n",
              "      <td>0.095245</td>\n",
              "      <td>1.448696</td>\n",
              "      <td>2.388498e+05</td>\n",
              "      <td>9.222050e+04</td>\n",
              "      <td>1.744638e+07</td>\n",
              "      <td>1.502800e+04</td>\n",
              "      <td>266.750000</td>\n",
              "      <td>2.711750e+03</td>\n",
              "      <td>2667.500000</td>\n",
              "      <td>166.750000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.370000</td>\n",
              "      <td>42.852500</td>\n",
              "      <td>1.780</td>\n",
              "      <td>1.346900e+04</td>\n",
              "      <td>967.50000</td>\n",
              "      <td>2.277500</td>\n",
              "      <td>1.372135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.898800</td>\n",
              "      <td>0.042556</td>\n",
              "      <td>5.993826</td>\n",
              "      <td>5.805613</td>\n",
              "      <td>9.715180</td>\n",
              "      <td>0.841575</td>\n",
              "      <td>67.176376</td>\n",
              "      <td>0.848004</td>\n",
              "      <td>-0.025608</td>\n",
              "      <td>0.749838</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>0.998781</td>\n",
              "      <td>1.233205</td>\n",
              "      <td>0.791184</td>\n",
              "      <td>0.541062</td>\n",
              "      <td>0.182073</td>\n",
              "      <td>0.119924</td>\n",
              "      <td>2.128956</td>\n",
              "      <td>4.484225e+05</td>\n",
              "      <td>1.731370e+05</td>\n",
              "      <td>4.208217e+07</td>\n",
              "      <td>8.027800e+04</td>\n",
              "      <td>2455.000000</td>\n",
              "      <td>2.420800e+04</td>\n",
              "      <td>28540.000000</td>\n",
              "      <td>530.500000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>111.500000</td>\n",
              "      <td>2.195000</td>\n",
              "      <td>67.410000</td>\n",
              "      <td>2.965</td>\n",
              "      <td>7.118300e+04</td>\n",
              "      <td>3806.50000</td>\n",
              "      <td>7.535000</td>\n",
              "      <td>2.193528</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.563850</td>\n",
              "      <td>0.050614</td>\n",
              "      <td>6.644645</td>\n",
              "      <td>6.483055</td>\n",
              "      <td>10.503349</td>\n",
              "      <td>0.916756</td>\n",
              "      <td>72.750641</td>\n",
              "      <td>0.905934</td>\n",
              "      <td>0.115518</td>\n",
              "      <td>0.788062</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>1.243064</td>\n",
              "      <td>1.410780</td>\n",
              "      <td>0.991866</td>\n",
              "      <td>0.610494</td>\n",
              "      <td>0.275409</td>\n",
              "      <td>0.189126</td>\n",
              "      <td>2.384179</td>\n",
              "      <td>1.917371e+06</td>\n",
              "      <td>7.403015e+05</td>\n",
              "      <td>1.128179e+08</td>\n",
              "      <td>1.438998e+05</td>\n",
              "      <td>5921.500000</td>\n",
              "      <td>9.057250e+04</td>\n",
              "      <td>58660.500000</td>\n",
              "      <td>1701.250000</td>\n",
              "      <td>24.250000</td>\n",
              "      <td>1809.000000</td>\n",
              "      <td>5.115000</td>\n",
              "      <td>88.032500</td>\n",
              "      <td>6.855</td>\n",
              "      <td>1.356950e+05</td>\n",
              "      <td>12272.00000</td>\n",
              "      <td>18.965000</td>\n",
              "      <td>5.113903</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>7.448900</td>\n",
              "      <td>0.107122</td>\n",
              "      <td>7.503372</td>\n",
              "      <td>7.394428</td>\n",
              "      <td>10.812712</td>\n",
              "      <td>0.949119</td>\n",
              "      <td>75.000969</td>\n",
              "      <td>0.939144</td>\n",
              "      <td>0.268685</td>\n",
              "      <td>0.886272</td>\n",
              "      <td>1.972317e+00</td>\n",
              "      <td>1.338946</td>\n",
              "      <td>1.487218</td>\n",
              "      <td>1.072881</td>\n",
              "      <td>0.650298</td>\n",
              "      <td>0.376709</td>\n",
              "      <td>0.461268</td>\n",
              "      <td>2.976877</td>\n",
              "      <td>9.984670e+06</td>\n",
              "      <td>3.855103e+06</td>\n",
              "      <td>1.401812e+09</td>\n",
              "      <td>2.442375e+06</td>\n",
              "      <td>87618.000000</td>\n",
              "      <td>1.846641e+06</td>\n",
              "      <td>508116.000000</td>\n",
              "      <td>44457.000000</td>\n",
              "      <td>637.000000</td>\n",
              "      <td>33728.000000</td>\n",
              "      <td>11.530000</td>\n",
              "      <td>97.240000</td>\n",
              "      <td>inf</td>\n",
              "      <td>2.118646e+06</td>\n",
              "      <td>324735.00000</td>\n",
              "      <td>28.110000</td>\n",
              "      <td>11.532773</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Ladder score  ...  Perc deaths over confirmed\n",
              "count     24.000000  ...                   24.000000\n",
              "mean       5.787104  ...                    3.300433\n",
              "std        1.148482  ...                    2.803142\n",
              "min        3.573300  ...                    0.264550\n",
              "25%        5.029300  ...                    1.372135\n",
              "50%        5.898800  ...                    2.193528\n",
              "75%        6.563850  ...                    5.113903\n",
              "max        7.448900  ...                   11.532773\n",
              "\n",
              "[8 rows x 35 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a7et1Wae30U8"
      },
      "source": [
        "####1. Grouping by regional indicator (median)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jeGBjq-e36NH",
        "outputId": "59469b8d-433b-4cf6-f637-f0f01c845f7b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        }
      },
      "source": [
        "#Group by regional indicator and provide a median for each region, then sort that from lowest to highest.\n",
        "all.groupby('Regional indicator')['Deaths'].median().sort_values()\n",
        "# We can see that the Latin America and Carribean regional indicator had the highest median. Whilst, the sub-saharan Africa regional indicator had the lowest median of 1 deaths. Note: This may not be a good indicator of the regions death medians as there may not be an equal distribution of countries in each region. \n",
        " \n",
        "#Plot deaths colour coordinated by regional indicator\n",
        "px.scatter(all, x='Country',y='Deaths',color='Regional indicator')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-a0fb40fa2d25>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#Group by regional indicator and provide a median for each region, then sort that from lowest to highest.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mall\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Regional indicator'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Deaths'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmedian\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;31m# We can see that the Latin America and Carribean regional indicator had the highest median. Whilst, the sub-saharan Africa regional indicator had the lowest median of 1 deaths. Note: This may not be a good indicator of the regions death medians as there may not be an equal distribution of countries in each region.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#Plot deaths colour coordinated by regional indicator\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'builtin_function_or_method' object has no attribute 'groupby'"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "opTd40HY38DT"
      },
      "source": [
        "####2. Grouping by WHO region (median)\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FdizDd0e4CNz",
        "outputId": "0867ee28-150b-44c0-a171-adc0bec41559",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        }
      },
      "source": [
        "#Group by WHO region and calculate the median for each region, then sort that from lowest to highest.\n",
        "all.groupby('WHO Region')['Deaths'].median().sort_values()\n",
        "# We can see that for the WHO region, like the regional indicator, Africa also had the lowest median of 1 deaths. Whilst, the Americas had the highest death medians of 8860.5. Unlike the regional indicator median deaths, the output was a float not integer type.\n",
        " \n",
        "#Plot of deaths sorted by the WHO region by colour\n",
        "#px.scatter(all, x='Country',y='Deaths',color='WHO Region')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"7a410efb-2c9e-41b2-9753-98fe0b21bd17\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"7a410efb-2c9e-41b2-9753-98fe0b21bd17\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        '7a410efb-2c9e-41b2-9753-98fe0b21bd17',\n",
              "                        [{\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=South-East Asia<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=South-East Asia\", \"marker\": {\"color\": \"#636efa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=South-East Asia\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"India\", \"Bangladesh\", \"Thailand\"], \"xaxis\": \"x\", \"y\": [33408, 2965, 58], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=Africa<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=Africa\", \"marker\": {\"color\": \"#EF553B\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=Africa\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"Burundi\"], \"xaxis\": \"x\", \"y\": [1], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=Eastern Mediterranean<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=Eastern Mediterranean\", \"marker\": {\"color\": \"#00cc96\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=Eastern Mediterranean\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"Egypt\", \"Jordan\", \"Iran\", \"Morocco\", \"Pakistan\"], \"xaxis\": \"x\", \"y\": [4652, 11, 15912, 316, 5842], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=Western Pacific<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=Western Pacific\", \"marker\": {\"color\": \"#ab63fa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=Western Pacific\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"China\", \"Malaysia\", \"Japan\", \"South Korea\", \"Philippines\", \"Australia\", \"New Zealand\"], \"xaxis\": \"x\", \"y\": [4656, 124, 998, 300, 1945, 167, 22], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=Americas<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=Americas\", \"marker\": {\"color\": \"#FFA15A\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=Americas\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"Ecuador\", \"Colombia\", \"Brazil\", \"Canada\"], \"xaxis\": \"x\", \"y\": [5532, 8777, 87618, 8944], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"WHO Region=Europe<br>Country=%{x}<br>Deaths=%{y}\", \"legendgroup\": \"WHO Region=Europe\", \"marker\": {\"color\": \"#19d3f3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"WHO Region=Europe\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [\"Kazakhstan\", \"Israel\", \"Sweden\", \"Netherlands\"], \"xaxis\": \"x\", \"y\": [585, 474, 5700, 6160], \"yaxis\": \"y\"}],\n",
              "                        {\"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Country\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Deaths\"}}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('7a410efb-2c9e-41b2-9753-98fe0b21bd17');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s95GivjW4EZl"
      },
      "source": [
        "####3. Health life expectancy "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k5wtxL514F6B",
        "outputId": "941ecbe3-33bd-4c15-9443-c8eb553e08be",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        }
      },
      "source": [
        "#Sort the dataset by descending healthy life expectancy to determine the countries with the lowest health life expectancy\n",
        "all.sort_values(ascending=False, inplace=True,by='Healthy life expectancy')\n",
        " \n",
        "#Display the top countries with highesst healthy life expectancy\n",
        "all.head()\n",
        "#We can see from the head output that Japan had the highest health life expectancy of 75 years old, followed by Australia, South Korea, Canada and New Zealand.\n",
        " \n",
        "#Plots of deaths sorted by country(coloured)\n",
        "#px.scatter(all, x='Deaths',y='Healthy life expectancy',color='Country')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"a38ec2f7-8239-4b6b-b1af-881d50697b8f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"a38ec2f7-8239-4b6b-b1af-881d50697b8f\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        'a38ec2f7-8239-4b6b-b1af-881d50697b8f',\n",
              "                        [{\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Japan<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Japan\", \"marker\": {\"color\": \"#636efa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Japan\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [998], \"xaxis\": \"x\", \"y\": [75.00096893], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Australia<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Australia\", \"marker\": {\"color\": \"#EF553B\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Australia\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [167], \"xaxis\": \"x\", \"y\": [73.60453796], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=South Korea<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=South Korea\", \"marker\": {\"color\": \"#00cc96\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=South Korea\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [300], \"xaxis\": \"x\", \"y\": [73.60272979999999], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Canada<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Canada\", \"marker\": {\"color\": \"#ab63fa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Canada\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [8944], \"xaxis\": \"x\", \"y\": [73.60160065], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=New Zealand<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=New Zealand\", \"marker\": {\"color\": \"#FFA15A\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=New Zealand\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [22], \"xaxis\": \"x\", \"y\": [73.20262909], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Israel<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Israel\", \"marker\": {\"color\": \"#19d3f3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Israel\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [474], \"xaxis\": \"x\", \"y\": [73.20025635], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Sweden<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Sweden\", \"marker\": {\"color\": \"#FF6692\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Sweden\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [5700], \"xaxis\": \"x\", \"y\": [72.60076904], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Netherlands<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Netherlands\", \"marker\": {\"color\": \"#B6E880\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Netherlands\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [6160], \"xaxis\": \"x\", \"y\": [72.30091858], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=China<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=China\", \"marker\": {\"color\": \"#FF97FF\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=China\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [4656], \"xaxis\": \"x\", \"y\": [69.2891922], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Ecuador<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Ecuador\", \"marker\": {\"color\": \"#FECB52\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Ecuador\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [5532], \"xaxis\": \"x\", \"y\": [68.50003815], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Colombia<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Colombia\", \"marker\": {\"color\": \"#636efa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Colombia\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [8777], \"xaxis\": \"x\", \"y\": [67.69958496], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Thailand<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Thailand\", \"marker\": {\"color\": \"#EF553B\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Thailand\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [58], \"xaxis\": \"x\", \"y\": [67.25059509], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Malaysia<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Malaysia\", \"marker\": {\"color\": \"#00cc96\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Malaysia\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [124], \"xaxis\": \"x\", \"y\": [67.10215759], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Jordan<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Jordan\", \"marker\": {\"color\": \"#ab63fa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Jordan\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [11], \"xaxis\": \"x\", \"y\": [66.79975128], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Brazil<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Brazil\", \"marker\": {\"color\": \"#FFA15A\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Brazil\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [87618], \"xaxis\": \"x\", \"y\": [66.48016357], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Iran<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Iran\", \"marker\": {\"color\": \"#19d3f3\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Iran\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [15912], \"xaxis\": \"x\", \"y\": [66.00614929], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Morocco<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Morocco\", \"marker\": {\"color\": \"#FF6692\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Morocco\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [316], \"xaxis\": \"x\", \"y\": [65.89624023], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Kazakhstan<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Kazakhstan\", \"marker\": {\"color\": \"#B6E880\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Kazakhstan\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [585], \"xaxis\": \"x\", \"y\": [64.60996246], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Bangladesh<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Bangladesh\", \"marker\": {\"color\": \"#FF97FF\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Bangladesh\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [2965], \"xaxis\": \"x\", \"y\": [64.50306702], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Philippines<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Philippines\", \"marker\": {\"color\": \"#FECB52\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Philippines\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [1945], \"xaxis\": \"x\", \"y\": [61.92676163], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Egypt<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Egypt\", \"marker\": {\"color\": \"#636efa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Egypt\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [4652], \"xaxis\": \"x\", \"y\": [61.78015137], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=India<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=India\", \"marker\": {\"color\": \"#EF553B\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=India\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [33408], \"xaxis\": \"x\", \"y\": [60.21518707], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Pakistan<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Pakistan\", \"marker\": {\"color\": \"#00cc96\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Pakistan\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [5842], \"xaxis\": \"x\", \"y\": [58.25313568], \"yaxis\": \"y\"}, {\"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Country=Burundi<br>Deaths=%{x}<br>Healthy life expectancy=%{y}\", \"legendgroup\": \"Country=Burundi\", \"marker\": {\"color\": \"#ab63fa\", \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Country=Burundi\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [1], \"xaxis\": \"x\", \"y\": [53.40000153], \"yaxis\": \"y\"}],\n",
              "                        {\"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Deaths\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Healthy life expectancy\"}}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('a38ec2f7-8239-4b6b-b1af-881d50697b8f');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b3HjBhP_edep"
      },
      "source": [
        "####4. Deaths over confirmed cases"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SjrKnXR_ed1y",
        "outputId": "8b8d928b-99be-49a9-8193-d55af65bc623",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 170
        }
      },
      "source": [
        "# Calculate the percentage of confirmed cases that died, by dividing the Death column by the Confirmed cases column and then multiplying it by 100.\n",
        "all['Perc deaths over confirmed'] = (all.Deaths/all.Confirmed)*100\n",
        "\n",
        "# Resorting the dataset alphabetically by Country\n",
        "all = all.sort_values('Country')\n",
        "\n",
        "# Output a statistical summary for Deaths over the confirmed column.\n",
        "all['Perc deaths over confirmed'].describe()\n",
        "# We can see that the mean percentage that confirmed cases died was 3.3%. While the maximum percentage that confirmed cases died was 11.5%. "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    24.000000\n",
              "mean      3.300433\n",
              "std       2.803142\n",
              "min       0.264550\n",
              "25%       1.372135\n",
              "50%       2.193528\n",
              "75%       5.113903\n",
              "max      11.532773\n",
              "Name: Perc deaths over confirmed, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    }
  ]
}